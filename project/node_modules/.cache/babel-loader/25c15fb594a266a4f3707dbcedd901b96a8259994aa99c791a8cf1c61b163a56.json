{"ast":null,"code":"var _jsxFileName = \"D:\\\\University UE Projects\\\\GroupProject\\\\mybranch\\\\SDGP-GroupF-React-project\\\\project\\\\src\\\\components\\\\ReturnNavArray.tsx\";\nimport \"./styles.scss\";\n//BrowserRouter isn't required because it exists in index.js\nimport HomePage from \"./HomePage\";\nimport ViewAppointment from \"./ViewAppointment\";\nimport Registration from \"./Registration\";\nimport CreateAppointment from \"./CreateAppointment\";\nimport ViewMedRecord from \"./ViewMedRecord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ReturnNavArray = props => {\n  let links;\n  let labels;\n  let routes;\n  let {\n    returnType\n  } = props;\n  if (returnType === \"Patient\") {\n    props.passLinks([\"/\", \"/viewMed\", \"/reg\", \"/viewApp\", \"/createApp\"]); //This array contains the paths to elements\n    props.passLabels([\"Home\", \"View Medical Record\", \"Registration\", \"View and Cancel Appointments\", \"Create Appointment\"]); //This array contains the labels of the header links\n    props.passRoutes([/*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewMedRecord, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewAppointment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateAppointment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n};\n_c = ReturnNavArray;\nexport default ReturnNavArray;\nvar _c;\n$RefreshReg$(_c, \"ReturnNavArray\");","map":{"version":3,"names":["HomePage","ViewAppointment","Registration","CreateAppointment","ViewMedRecord","jsxDEV","_jsxDEV","Fragment","_Fragment","ReturnNavArray","props","links","labels","routes","returnType","passLinks","passLabels","passRoutes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/University UE Projects/GroupProject/mybranch/SDGP-GroupF-React-project/project/src/components/ReturnNavArray.tsx"],"sourcesContent":["import \"./styles.scss\";\r\nimport { Link, Route, Routes } from \"react-router-dom\"; //BrowserRouter isn't required because it exists in index.js\r\nimport HomePage from \"./HomePage\";\r\nimport ViewAppointment from \"./ViewAppointment\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Login from \"./Login\";\r\nimport Registration from \"./Registration\";\r\nimport CreateAppointment from \"./CreateAppointment\";\r\nimport UserButton from \"./UserButton\";\r\nimport ViewMedRecord from \"./ViewMedRecord\";\r\nimport PatientRecords from \"./PatientRecords\";\r\nimport UserChoice from \"./UserChoice\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Props {\r\n  /*links: string[];\r\n  labels: string[];\r\n  routes: React.ReactElement[];*/\r\n  returnType: string;\r\n  passLinks: (links: string[]) => void;\r\n  passLabels: (labels: string[]) => void;\r\n  passRoutes: (routes: React.ReactElement[]) => void;\r\n}\r\n\r\nconst ReturnNavArray = (props: Props) => {\r\n  let links: string[];\r\n  let labels: string[];\r\n  let routes: React.ReactElement[];\r\n  let { returnType } = props;\r\n\r\n  if (returnType === \"Patient\") {\r\n    props.passLinks([\"/\", \"/viewMed\", \"/reg\", \"/viewApp\", \"/createApp\"]); //This array contains the paths to elements\r\n    props.passLabels([\r\n      \"Home\",\r\n      \"View Medical Record\",\r\n      \"Registration\",\r\n      \"View and Cancel Appointments\",\r\n      \"Create Appointment\",\r\n    ]); //This array contains the labels of the header links\r\n    props.passRoutes([\r\n      <HomePage />,\r\n      <ViewMedRecord />,\r\n      <Registration />,\r\n      <ViewAppointment />,\r\n      <CreateAppointment />,\r\n    ]);\r\n\r\n    return <></>;\r\n  }\r\n};\r\n\r\nexport default ReturnNavArray;\r\n"],"mappings":";AAAA,OAAO,eAAe;AACkC;AACxD,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAI/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAe5C,MAAMC,cAAc,GAAIC,KAAY,IAAK;EACvC,IAAIC,KAAe;EACnB,IAAIC,MAAgB;EACpB,IAAIC,MAA4B;EAChC,IAAI;IAAEC;EAAW,CAAC,GAAGJ,KAAK;EAE1B,IAAII,UAAU,KAAK,SAAS,EAAE;IAC5BJ,KAAK,CAACK,SAAS,CAAC,CAAC,GAAG,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IACtEL,KAAK,CAACM,UAAU,CAAC,CACf,MAAM,EACN,qBAAqB,EACrB,cAAc,EACd,8BAA8B,EAC9B,oBAAoB,CACrB,CAAC,CAAC,CAAC;IACJN,KAAK,CAACO,UAAU,CAAC,cACfX,OAAA,CAACN,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZf,OAAA,CAACF,aAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjBf,OAAA,CAACJ,YAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChBf,OAAA,CAACL,eAAe;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnBf,OAAA,CAACH,iBAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,CACtB,CAAC;IAEF,oBAAOf,OAAA,CAAAE,SAAA,oBAAK;EACd;AACF,CAAC;AAACc,EAAA,GAzBIb,cAAc;AA2BpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}