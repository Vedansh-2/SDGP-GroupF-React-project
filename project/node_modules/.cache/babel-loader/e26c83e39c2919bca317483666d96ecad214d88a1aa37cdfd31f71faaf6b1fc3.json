{"ast":null,"code":"var _jsxFileName = \"D:\\\\University UE Projects\\\\GroupProject\\\\mybranch\\\\SDGP-GroupF-React-project\\\\project\\\\src\\\\components\\\\uniComponents\\\\choiceComponents\\\\UserChoice.tsx\";\n/*\r\n\r\nThe user choice component prompts the user to choose the \r\ninterface they want to interact with, \r\nwhether it be the doctor, admin or patient type.\r\n\r\n*/\n\nimport UserButton from \"./UserButton\";\nimport \"../../css/componentStyle.css\";\n\n//onButClick passes the choice data from this component to main\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserChoice = props => {\n  /*\r\n    This function checks the ‘data-type’ attribute of all divisions \r\n    around each button, these data-types each contain a type of \r\n    user and depending on which one is clicked, a different \r\n    user type is passed to main. \r\n  */\n  const handleClick = event => {\n    if (event.currentTarget.getAttribute(\"data-type\") === \"Patient\") {\n      const data = \"Patient\";\n      props.onButClick(data);\n    } else if (event.currentTarget.getAttribute(\"data-type\") === \"Doctor\") {\n      const data = \"Doctor\";\n      props.onButClick(data);\n    } else if (event.currentTarget.getAttribute(\"data-type\") === \"Admin\") {\n      const data = \"Admin\";\n      props.onButClick(data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"govuk-main-wrapper app-main-class\",\n      id: \"main-content\",\n      role: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-type\": \"Patient\",\n              onClick: handleClick,\n              children: /*#__PURE__*/_jsxDEV(UserButton, {\n                type: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-type\": \"Doctor\",\n              onClick: handleClick,\n              children: /*#__PURE__*/_jsxDEV(UserButton, {\n                type: \"Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              \"data-type\": \"Admin\",\n              onClick: handleClick,\n              children: /*#__PURE__*/_jsxDEV(UserButton, {\n                type: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = UserChoice;\nexport default UserChoice;\nvar _c;\n$RefreshReg$(_c, \"UserChoice\");","map":{"version":3,"names":["UserButton","jsxDEV","_jsxDEV","Fragment","_Fragment","UserChoice","props","handleClick","event","currentTarget","getAttribute","data","onButClick","children","className","id","role","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/University UE Projects/GroupProject/mybranch/SDGP-GroupF-React-project/project/src/components/uniComponents/choiceComponents/UserChoice.tsx"],"sourcesContent":["/*\r\n\r\nThe user choice component prompts the user to choose the \r\ninterface they want to interact with, \r\nwhether it be the doctor, admin or patient type.\r\n\r\n*/\r\n\r\nimport UserButton from \"./UserButton\";\r\nimport \"../../css/componentStyle.css\";\r\n\r\n//onButClick passes the choice data from this component to main\r\ninterface Props {\r\n  onButClick: (data: string) => void;\r\n}\r\n\r\nconst UserChoice = (props: Props) => {\r\n  /*\r\n    This function checks the ‘data-type’ attribute of all divisions \r\n    around each button, these data-types each contain a type of \r\n    user and depending on which one is clicked, a different \r\n    user type is passed to main. \r\n  */\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n    if (event.currentTarget.getAttribute(\"data-type\") === \"Patient\") {\r\n      const data = \"Patient\";\r\n      props.onButClick(data);\r\n    } else if (event.currentTarget.getAttribute(\"data-type\") === \"Doctor\") {\r\n      const data = \"Doctor\";\r\n      props.onButClick(data);\r\n    } else if (event.currentTarget.getAttribute(\"data-type\") === \"Admin\") {\r\n      const data = \"Admin\";\r\n      props.onButClick(data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main\r\n        className=\"govuk-main-wrapper app-main-class\"\r\n        id=\"main-content\"\r\n        role=\"main\"\r\n      >\r\n        {/* User choices: */}\r\n        <table className=\"center\">\r\n          <tr>\r\n            <th>\r\n              <div data-type=\"Patient\" onClick={handleClick}>\r\n                <UserButton type=\"Patient\" />\r\n              </div>\r\n            </th>\r\n            <th>\r\n              <div data-type=\"Doctor\" onClick={handleClick}>\r\n                <UserButton type=\"Doctor\" />\r\n              </div>\r\n            </th>\r\n            <th>\r\n              <div data-type=\"Admin\" onClick={handleClick}>\r\n                <UserButton type=\"Admin\" />\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </table>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserChoice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}